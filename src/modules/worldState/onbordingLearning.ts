import "driver.js/dist/driver.css";
import { driver } from "driver.js";

function encodeSVG(svg) {
  return svg.replace(/#/g, '%23')
            .replace(/\s+/g, ' ')
            .replace(/"/g, '\'')
            .replace(/%/g, '%25')
            .replace(/</g, '%3C')
            .replace(/>/g, '%3E')
            .replace(/\//g, '%2F');
}

export const onbordingLearning = driver({
    showProgress: true,
    nextBtnText: 'ü°∫',
    prevBtnText: 'ü°∏',
    steps: [
      { 
        element: 'canvas', 
        popover: { 
          title: '–ü–æ–ª–µ', 
          description: '–ù–∞ –∫–∞–∂–¥–æ–º —É—Ä–æ–≤–Ω–µ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Ä–µ—à–∏—Ç—å –∫–∞–∫—É—é-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º—É —Å –ø–æ–º–æ—â—å—é —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ö–µ–º—ã –Ω–∞ –ø–æ–ª–µ.', 
          side: "top", 
          align: 'center',
        }
      },
      { 
        element: 'div#task-panel', 
        popover: { 
          title: '–ü–∞–Ω–µ–ª—å –∑–∞–¥–∞—á', 
          description: '–ó–¥–µ—Å—å –≤–∞–º –±—É–¥—É—Ç –¥–∞–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—É—é –≤–∞–º –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å. –ß—Ç–æ–±—ã —Å–≤–µ—Ä–Ω—É—Ç—å –ø–∞–Ω–µ–ª—å –∑–∞–¥–∞—á–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä—è–¥–æ–º.', 
          side: "left", 
          align: 'center',
        }
      },
      { 
        element: 'div#tools', 
        popover: { 
          title: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', 
          description: '–£ –≤–∞—Å –µ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω—è—Ç—å —Å—Ö–µ–º—É –Ω–∞ –ø–æ–ª–µ. –í—ã –º–æ–∂–µ—Ç–µ —Ä–∏—Å–æ–≤–∞—Ç—å –∑–Ω–∞–∫–∏, —Å—Ç–∏—Ä–∞—Ç—å –∏—Ö –∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –ø–æ –ø–æ–ª—é.', 
          side: "left", 
          align: 'start',
        }
      },
      { 
        element: '#context-tools', 
        popover: { 
          title: '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é', 
          description: '–î–∞–Ω–Ω–æ–µ –º–µ–Ω—é –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π —Ç–∏–ø –∑–Ω–∞–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.', 
          side: "left", 
          align: 'start',
        }
      },
      { 
        popover: { 
          title: '–í–ø–µ—Ä—ë–¥!', 
          description: '–û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã!', 
        } 
      }
    ],
    onHighlighted: () => {
      // 1. –ù–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π SVG —ç–ª–µ–º–µ–Ω—Ç
      //    (–ò—Å–ø–æ–ª—å–∑—É–µ–º ID, –Ω–æ –º–æ–∂–Ω–æ –∏ –ø–æ –∫–ª–∞—Å—Å—É, —Ç–µ–≥—É –∏–ª–∏ –¥—Ä—É–≥–æ–º—É —Å–µ–ª–µ–∫—Ç–æ—Ä—É)
      const svgElement = document.querySelector(".driver-overlay")
      const pathElement = svgElement.querySelector('path');
      const viewBox = svgElement.getAttribute('viewBox');
      const d = pathElement.getAttribute('d')
      const popover = document.querySelector("#driver-popover-content")
      popover.setAttribute('popover', 'manual')
      const svgString = `<svg xmlns='http://www.w3.org/2000/svg' viewBox='${viewBox}' style='fill-rule: evenodd; clip-rule: evenodd; stroke-linejoin: round; stroke-miterlimit: 2; z-index: 10000; position: fixed; top: 0px; left: 0px; width: 100%; height: 100%;'><path style='fill: rgb(0, 0, 0); opacity: 0.7; pointer-events: auto; cursor: auto;' d='${d}'/></svg>`;
      const encodedSVG = encodeSVG(svgString);
      const backdropStyle = `url("data:image/svg+xml,${encodedSVG}")`;
      const style = document.createElement('style');
        style.innerHTML = `
            #driver-popover-content::backdrop {
                background-image: ${backdropStyle};
                background-repeat: no-repeat;
                background-size: cover;
            }
        `;
        document.head.appendChild(style);
        popover.showPopover()
    }
  });
